<?php

/**
 * @file
 * Autoweek Company installation
 */

/**
 * Implements hook_install().
 */
function aws_company_install() {
    
    
    //Get localization function for installation as t() may be unavailable.
    $t = get_t();
    
    // Content type definition.
    $content_type = array(
        'type' => 'aws_company',
        'name' => $t('Company'),
        'description' => $t('An Autoweek Company.'),
        'title_label' => $t('Company Name'),
        'base' => 'node_content',
        'custom' => TRUE,
    );
    
    // Set remaining definitions with defaults.
    $node_type = node_type_set_defaults($content_type);
    
    // Save the content type
    node_type_save($node_type);
           
    // Create fields.
    $fields = array();
    
    //Fields Group 1
    $fields['aws_company_address'] = array(
        'field_name' => 'aws_company_address',
        'type' => 'text',
        'weight' => 1,
    );
    $fields['aws_company_city'] = array(
        'field_name' => 'aws_company_city',
        'type' => 'text',
        'weight' => 2,
    );
    $fields['aws_company_state'] = array(
        'field_name' => 'aws_company_state',
        'type' => 'text',
        'weight' => 3,
    );
    $fields['aws_company_zip'] = array(
        'field_name' => 'aws_company_zip',
        'type' => 'text',
        'weight' => 4,
    );
    $fields['aws_company_country'] = array(
        'field_name' => 'aws_company_country',
        'type' => 'text',
        'weight' => 5,
    );
    $fields['aws_company_website'] = array(
        'field_name' => 'aws_company_website',
        'type' => 'text',
        'weight' => 6,
    );
    $fields['aws_company_description'] = array(
        'field_name' => 'aws_company_description',
        'type' => 'text_long',
        'settings' => array(
            'max_length' => 0,
        ),
        'weight' => 7,
    );
    $fields['aws_company_store'] = array(
        'field_name' => 'aws_company_store',
        'type' => 'taxonomy_term_reference',
        'settings' => array(
            'allowed_values' => array(
              array(
                'vocabulary' => 'store',
                'parent' => 0,
               ),
             ),
           ),
        'cardinality' => FIELD_CARDINALITY_UNLIMITED,
        'weight' => 8,
    );
    $fields['aws_company_legacy_store'] = array(
        'field_name' => 'aws_company_legacy_store',
        'type' => 'text',
        'weight' => 9,
    );
    $fields['aws_company_logo'] = array(
        'field_name' => 'aws_company_logo',
        'type' => 'image',
        'weight' => 10,
    );
    //Fields Group SEMA
    $fields['aws_company_nforgid'] = array(
        'field_name' => 'aws_company_nforgid',
        'type' => 'text',
        'weight' => 11,
    );

    foreach ($fields as $field) {
        field_create_field($field);
    }
    
    // Create field instances.
    $instances = array();
    
    //Instances Group 1
    $instances['aws_company_address'] = array(
        'field_name' => 'aws_company_address',
        'label' => $t('Address'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['aws_company_city'] = array(
        'field_name' => 'aws_company_city',
        'label' => $t('City'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['aws_company_state'] = array(
        'field_name' => 'aws_company_state',
        'label' => $t('State Code'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['aws_company_zip'] = array(
        'field_name' => 'aws_company_zip',
        'label' => $t('Zip Code'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['aws_company_country'] = array(
        'field_name' => 'aws_company_country',
        'label' => $t('Country'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['aws_company_website'] = array(
        'field_name' => 'aws_company_website',
        'label' => $t('Website'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['aws_company_description'] = array(
        'field_name' => 'aws_company_description',
        'label' => $t('Company Description'),
        'widget' => array(
            'type' => 'text_textarea',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['aws_company_store'] = array(
        'field_name' => 'aws_company_store',
        'label' => $t('Store'),
        'description' => $t('Attach the store(s) the company belongs to.'),
        'widget' => array(
            'type' => 'term_reference_tree',
            'settings' => array(
                'track_list' => 1,
                'max_depth' => 1,
            
            ),
        ),
    );
    $instances['aws_company_legacy_store'] = array(
        'field_name' => 'aws_company_legacy_store',
        'label' => $t('Legacy Store Text'),
        'description' => $t('For backend use.'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['aws_company_logo'] = array(
        'field_name' => 'aws_company_logo',
        'label' => $t('Company Logo'),
        'description' => $t('Upload company logo here.'),
        'required' => FALSE,
        'settings' => array(
            'title_field' => TRUE,
            'alt_field' => TRUE,
            'alt_field_default' => '[node:title] logo',
            'title_field_default' => '[node:title] logo',
        ),
        'display' => array(
            'default' => array(
                'settings' => array(
                    'image_style' => 'aws-company-logo',
                ),
                'weight' => 0,
            ),
        ),
    );
    //Instances Group SEMA
    $instances['aws_company_nforgid'] = array(
        'field_name' => 'aws_company_nforgid',
        'label' => $t('nfOrgID'),
        'description' => $t('For SEMA backend use.'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    
    foreach ($instances as $instance) {
        $instance['entity_type'] = 'node';
        $instance['bundle'] = 'aws_company';
        field_create_instance($instance);
    }
    
    //Call function to create styles.
    $style_name = array('aws-company-logo');
    _aws_company_styles_create($style_name);
}

/**
* Implements hook_uninstall().
*/
function aws_company_uninstall() {

    $t = get_t();
    
    //Get all node ids with aws_company content type.
    $sql_query = 'SELECT nid ';
    $sql_query .= 'FROM {node} ';
    $sql_query .= 'WHERE {node}.type = :type ';
    $result = db_query($sql_query, array(':type' => 'aws_company'));
    
    $nids = array();
    foreach ($result as $row) {
        $nids[] = $row->nid;
    }
    
    // Delete all aws_company content.
    node_delete_multiple($nids);
    drupal_set_message($t('Autoweek Company content removed.'));
    
    //Remove all fields and field instances.
    foreach (field_info_instances('node', 'aws_company') as $field_name => $instance) {
        field_delete_instance($instance);
    }
    drupal_set_message($t('Autoweek Company fields and field instances removed.'));
    
    //Delete the content type.
    node_type_delete('aws_company');
    drupal_set_message($t('Autoweek Company content type removed.'));
    
    //Delete image styles.
    $style_name = array('aws-company-logo');
    _aws_company_styles_delete($style_name);
    
    //Clean up deleted fields.
    field_purge_batch(1000);
}

/**
* Implements function to create new image style.
*/
function _aws_company_styles_create($style_name) {
    // Create image styles.
    foreach($style_name as $value) {
        $style = image_style_save(array('name' => $value));

        switch($value) {
            case 'aws-company-logo':{
                $effect = array(
                    'name' => 'image_scale',
                    'data' => array(
                      'width' => 190,
                      'height' => 154,
                      'upscale' => TRUE,
                    ),
                    'isid' => $style['isid'],
                 );
                break;
            }
        }
        image_effect_save($effect);
    }
    
    // Give user feedback.
    $t = get_t();
    drupal_set_message($t('Autoweek Company styles created.'));
    
}

/**
* Implements function to delete image styles.
*/
function _aws_company_styles_delete($style_name) {
    // Delete image styles.
    foreach($style_name as $value) {
        image_style_delete(image_style_load($value));
    }
    
    // Give user feedback.
    $t = get_t();
    drupal_set_message($t('Autoweek Company styles deleted.'));
    
}