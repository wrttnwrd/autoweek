<?php

/**
 * @file
 * Autoweek press release installation v1
 */

/**
 * Implements hook_install().
 */
function aw_press_release_install() {
    
    
    //Get localization function for installation as t() may be unavailable.
    $t = get_t();
    
    // Content type definition.
    $content_type = array(
        'type' => 'aw_press_release',
        'name' => $t('Press Release'),
        'description' => $t('An Autoweek Press Release.'),
        'title_label' => $t('Title'),
        'base' => 'node_content',
        'custom' => TRUE,
    );
    
    // Set remaining definitions with defaults.
    $node_type = node_type_set_defaults($content_type);
    
    // Save the content type
    node_type_save($node_type);
    
    // Add a field for the body
    node_add_body_field($node_type, $t('Body'));
    
    // Create fields.
    $fields = array();
    
    
    //Group 1 - Press Release Content
    $fields['aw_press_release_attachments'] = array(
        'field_name' => 'aw_press_release_attachments',
        'type' => 'file',
        'cardinality' => -1,
    );
    $fields['aw_press_release_author'] = array(
        'field_name' => 'aw_press_release_author',
        'type' => 'text',
    );
        
    //Group 2 - Racing Specific
   $fields['aw_press_release_class'] = array(
        'field_name' => 'aw_press_release_class',
        'type' => 'taxonomy_term_reference',
        'settings' => array(
            'allowed_values' => array(
               array(
                'vocabulary' => 'racing_series',
                'parent' => 0,
               ),
             ),
           ),
        'cardinality' => -1,
    );
   $fields['aw_press_release_email'] = array(
        'field_name' => 'aw_press_release_email',
        'type' => 'text',
    );
    
    foreach ($fields as $field) {
        field_create_field($field);
    }
    
    
    // Create field instances.
    $instances = array();
    
    
    //Group 1 - Press Release Content
    $instances['aw_press_release_attachments'] = array(
        'field_name' => 'aw_press_release_attachments',
        'label' => $t('Attachments'),
        'required' => FALSE,
        'settings' => array(
            'file_extensions' => 'txt, pdf, jpg, jpeg, gif, png, zip, rar, 7z, gzip',
            'description_field' => 1,
        ),
    );
    $instances['aw_press_release_author'] = array(
        'field_name' => 'aw_press_release_author',
        'label' => $t('Author'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
        
    //Group 2 - Racing Specific
    $instances['aw_press_release_class'] = array(
        'field_name' => 'aw_press_release_class',
        'label' => $t('Series - Class'),
        'description' => $t('For Racing Press Releases ONLY.'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'options_select',
        ),
    );
    $instances['aw_press_release_email'] = array(
        'field_name' => 'aw_press_release_email',
        'label' => $t('Email'),
        'description' => $t('The Email address the Racing Press Release came from.'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    
    
    foreach ($instances as $instance) {
        $instance['entity_type'] = 'node';
        $instance['bundle'] = 'aw_press_release';
        field_create_instance($instance);
    }
}

/**
* Implements hook_uninstall().
*/
function aw_press_release_uninstall() {

    $t = get_t();
    
    //Get all node ids with aw_press_release content type.
    $sql_query = 'SELECT nid ';
    $sql_query .= 'FROM {node} ';
    $sql_query .= 'WHERE {node}.type = :type ';
    $result = db_query($sql_query, array(':type' => 'aw_press_release'));
    
    $nids = array();
    foreach ($result as $row) {
        $nids[] = $row->nid;
    }
    
    // Delete all aw_press_release content.
    node_delete_multiple($nids);
    drupal_set_message($t('Autoweek Press Release content removed.'));
    
    //Remove all fields and field instances.
    foreach (field_info_instances('node', 'aw_press_release') as $field_name => $instance) {
        field_delete_instance($instance);
    }
    drupal_set_message($t('Autoweek Press Release fields and field instances removed.'));
    
    //Delete the content type.
    node_type_delete('aw_press_release');
    drupal_set_message($t('Autoweek Press Release content type removed.'));
    
    //Clean up deleted fields.
    field_purge_batch(1000);
}