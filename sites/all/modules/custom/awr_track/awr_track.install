<?php

/**
 * @file
 * Autoweek Racing Track installation
 */


/**
 * Implements hook_install().
 */
function awr_track_install() {    
    
    //Get localization function for installation as t() may be unavailable.
    $t = get_t();
    
    // Content type definition.
    $content_type = array(
        'type' => 'awr_track',
        'name' => $t('Race Track'),
        'description' => $t('An Autoweek Series/Class Specific Track.'),
        'title_label' => $t('Track Name'),
        'base' => 'node_content',
        'custom' => TRUE,
    );
    
    // Set remaining definitions with defaults.
    $node_type = node_type_set_defaults($content_type);
    
    // Save the content type
    node_type_save($node_type);
           
    // Create fields.
    $fields = array();
    
    //Group 1 - Track Info
    $fields['awr_track_location'] = array(
        'field_name' => 'awr_track_location',
        'cardinality' => 1,
        'type' => 'entityreference',
        'weight' => 1,
        'settings' => array(
            'target_type' => 'node',
            'handler' => 'base',
            'handler_settings' => array(
                'target_bundles' => array(
                    'awr_driver_bio' => 'awr_location',
                ),
            ),
        ),
    );
    $fields['awr_track_class'] = array(
        'field_name' => 'awr_track_class',
        'type' => 'taxonomy_term_reference',
        'weight' => 2,
        'settings' => array(
            'allowed_values' => array(
               array(
                'vocabulary' => 'racing_series',
                'parent' => 0,
               ),
             ),
           ),
        'cardinality' => 1,
    );
    $fields['awr_track_main_image'] = array(
        'field_name' => 'awr_track_main_image',
        'type' => 'image',
        'weight' => 1,
    );
    $fields['awr_track_simple_image'] = array(
        'field_name' => 'awr_track_simple_image',
        'type' => 'image',
        'weight' => 1,
    );
    
    //Group 2 - Track Stats
    $fields['awr_track_previous_winner'] = array(
        'field_name' => 'awr_track_previous_winner',
        'cardinality' => 1,
        'type' => 'entityreference',
        'weight' => 1,
        'settings' => array(
            'target_type' => 'node',
            'handler' => 'base',
            'handler_settings' => array(
                'target_bundles' => array(
                    'awr_result' => 'awr_result',
                ),
            ),
        ),
    );
    $fields['awr_track_current_winner'] = array(
        'field_name' => 'awr_track_current_winner',
        'cardinality' => 1,
        'type' => 'entityreference',
        'weight' => 1,
        'settings' => array(
            'target_type' => 'node',
            'handler' => 'base',
            'handler_settings' => array(
                'target_bundles' => array(
                    'awr_result' => 'awr_result',
                ),
            ),
        ),
    );
    $fields['awr_track_lap_speed_rec'] = array(
        'field_name' => 'awr_track_lap_speed_rec',
        'type' => 'text',
        'weight' => 1,
    );
    $fields['awr_track_lap_speed_rec_holder'] = array(
        'field_name' => 'awr_track_lap_speed_rec_holder',
        'type' => 'text',
    );
    $fields['awr_track_lap_speed_rec_date'] = array(
        'field_name' => 'awr_track_lap_speed_rec_date',
        'type' => 'date',
        'weight' => 9,
        'settings' => array(
            'granularity' => array(
                'year' => 'year',
                'month' => 'month',
                'day' => 'day',
            ),
        ),
    );
    $fields['awr_track_lap_time_rec'] = array(
        'field_name' => 'awr_track_lap_time_rec',
        'type' => 'text',
        'weight' => 1,
    );
    $fields['awr_track_lap_time_rec_holder'] = array(
        'field_name' => 'awr_track_lap_time_rec_holder',
        'type' => 'text',
        'weight' => 1,
    );
    $fields['awr_track_lap_time_rec_date'] = array(
        'field_name' => 'awr_track_lap_time_rec_date',
        'type' => 'date',
        'weight' => 9,
        'settings' => array(
            'granularity' => array(
                'year' => 'year',
                'month' => 'month',
                'day' => 'day',
            ),
        ),
    );
    
    
    //Group 3 - Override Location Technical Info
    $fields['awr_track_num_stages'] = array(
        'field_name' => 'awr_track_num_stages',
        'type' => 'number_integer',
        'weight' => 1,
    );
    $fields['awr_track_distance'] = array(
        'field_name' => 'awr_track_distance',
        'type' => 'number_decimal',
        'weight' => 1,
    );
    $fields['awr_track_configuration'] = array(
        'field_name' => 'awr_track_configuration',
        'type' => 'text',
        'weight' => 1,
    );
    $fields['awr_track_banking'] = array(
        'field_name' => 'awr_track_banking',
        'type' => 'text',
        'weight' => 1,
    );
    $fields['awr_track_front_stretch'] = array(
        'field_name' => 'awr_track_front_stretch',
        'type' => 'number_decimal',
        'weight' => 1,
    );
    $fields['awr_track_back_stretch'] = array(
        'field_name' => 'awr_track_back_stretch',
        'type' => 'number_decimal',
        'weight' => 1,
    );
    $fields['awr_track_direction'] = array(
        'field_name' => 'awr_track_direction',
        'type' => 'list_text',
        'weight' => 1,
        'cardinality' => 1,
        'settings' => array(
            'allowed_values' => array(
                'clockwise' => 'Clockwise',
                'counterclockwise' => 'Counterclockwise',
            ),
        ),
    );
    $fields['awr_track_num_turns'] = array(
        'field_name' => 'awr_track_num_turns',
        'type' => 'number_integer',
        'weight' => 1,
    );
    $fields['awr_track_elevation_change'] = array(
        'field_name' => 'awr_track_elevation_change',
        'type' => 'text',
        'weight' => 1,
    );
    $fields['awr_track_surface'] = array(
        'field_name' => 'awr_track_surface',
        'type' => 'text',
        'weight' => 1,
    );
    $fields['awr_track_altitude'] = array(
        'field_name' => 'awr_track_altitude',
        'type' => 'number_integer',
        'weight' => 1,
    );
    $fields['awr_track_seating'] = array(
        'field_name' => 'awr_track_seating',
        'type' => 'text',
        'weight' => 1,
    );
    
    //Group 4 - Legacy
    $fields['awr_track_legacy_location_id'] = array(
        'field_name' => 'awr_track_legacy_location_id',
        'type' => 'text',
        'weight' => 1,
        'field_permissions' => array(
            'type' => 2,
        ),
    );
    $fields['awr_track_legacy_track_id'] = array(
        'field_name' => 'awr_track_legacy_track_id',
        'type' => 'text',
        'weight' => 1,
        'field_permissions' => array(
            'type' => 2,
        ),
    );
    $fields['awr_track_legacy_series_id'] = array(
        'field_name' => 'awr_track_legacy_series_id',
        'type' => 'text',
        'weight' => 1,
        'field_permissions' => array(
            'type' => 2,
        ),
    );
    $fields['awr_track_legacy_class_id'] = array(
        'field_name' => 'awr_track_legacy_class_id',
        'type' => 'text',
        'weight' => 1,
        'field_permissions' => array(
            'type' => 2,
        ),
    );
    
    
    

    foreach ($fields as $field) {
        field_create_field($field);
    }
    
    // Create field instances.
    $instances = array();    
    
    //Track Information
    $instances['awr_track_location'] = array(
        'field_name' => 'awr_track_location',
        'label' => $t('Location'),
        'description' => $t('Select Track Location'),
        'required' => TRUE,
        'widget' => array(
            'type' => 'entityreference_autocomplete',
            'settings' => array(
                'match_operator' => 'CONTAINS',
            ),
        ),
    );
    $instances['awr_track_class'] = array(
        'field_name' => 'awr_track_class',
        'label' => $t('Series - Class'),
        'required' => TRUE,
        'widget' => array(
            'type' => 'options_select',
        ),
    );
    $instances['awr_track_main_image'] = array(
        'field_name' => 'awr_track_main_image',
        'label' => $t('Track Image'),
        'description' => $t('Override Detailed Location Graphic'),
        'settings' => array(
            'title_field' => TRUE,
            'alt_field' => TRUE,
            'alt_field_default' => '[node:title]',
            'title_field_default' => '[node:title]',
        ),
        'display' => array(
            'default' => array(
                'settings' => array(
                    'image_style' => 'awr-loc-main',
                ),
                'weight' => 0,
            ),
        ),
    );
    $instances['awr_track_simple_image'] = array(
        'field_name' => 'awr_track_simple_image',
        'label' => $t('Simple Track Image'),
        'description' => $t('Override Simple Location Graphic'),
        'settings' => array(
            'title_field' => TRUE,
            'alt_field' => TRUE,
            'alt_field_default' => '[node:title]',
            'title_field_default' => '[node:title]',
        ),
        'display' => array(
            'default' => array(
                'settings' => array(
                    'image_style' => 'awr-loc-simple',
                ),
                'weight' => 0,
            ),
        ),
    );
    
    
    $instances['awr_track_previous_winner'] = array(
        'field_name' => 'awr_track_previous_winner',
        'label' => $t('Previous Winner'),
        'description' => $t('Reference the second most recent winning result.'),
        'required' => TRUE,
        'widget' => array(
            'type' => 'entityreference_autocomplete',
            'settings' => array(
                'match_operator' => 'CONTAINS',
            ),
        ),
    );
    $instances['awr_track_current_winner'] = array(
        'field_name' => 'awr_track_current_winner',
        'label' => $t('Current Winner'),
        'description' => $t('Reference the most recent winning result.'),
        'required' => TRUE,
        'widget' => array(
            'type' => 'entityreference_autocomplete',
            'settings' => array(
                'match_operator' => 'CONTAINS',
            ),
        ),
    );
    $instances['awr_track_lap_speed_rec'] = array(
        'field_name' => 'awr_track_lap_speed_rec',
        'label' => $t('Lap Speed Record'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['awr_track_lap_speed_rec_holder'] = array(
        'field_name' => 'awr_track_lap_speed_rec_holder',
        'label' => $t('Lap Speed Record Holder'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['awr_track_lap_speed_rec_date'] = array(
        'field_name' => 'awr_track_lap_speed_rec_date',
        'label' => $t('Lap Speed Record Date'),
        'description' => $t('Format MM/DD/YYYY.'),
        'widget' => array(
            'type' => 'date_text',
        ),
        'settings' => array(
            'text_processing' => 0,
            'default_value' => 'blank',
        ),
    );
    $instances['awr_track_lap_time_rec'] = array(
        'field_name' => 'awr_track_lap_time_rec',
        'label' => $t('Lap Time Record'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['awr_track_lap_time_rec_holder'] = array(
        'field_name' => 'awr_track_lap_time_rec_holder',
        'label' => $t('Lap Time Record Holder'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['awr_track_lap_time_rec_date'] = array(
        'field_name' => 'awr_track_lap_time_rec_date',
        'label' => $t('Lap Time Record Date'),
        'description' => $t('Format MM/DD/YYYY.'),
        'widget' => array(
            'type' => 'date_text',
        ),
        'settings' => array(
            'text_processing' => 0,
            'default_value' => 'blank',
        ),
    );
    
    //Override Location Technical Information
    $instances['awr_track_num_stages'] = array(
        'field_name' => 'awr_track_num_stages',
        'label' => $t('Number of Stages'),
        'description' => $t('e.g. 7'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'number',
        ),
    );
    $instances['awr_track_distance'] = array(
        'field_name' => 'awr_track_distance',
        'label' => $t('Distance (Miles)'),
        'description' => $t('e.g. 2.35'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'number',
        ),
    );
    $instances['awr_track_configuration'] = array(
        'field_name' => 'awr_track_configuration',
        'label' => $t('Track Configuration'),
        'description' => $t('e.g. Oval'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['awr_track_banking'] = array(
        'field_name' => 'awr_track_banking',
        'label' => $t('Banking'),
        'description' => $t('e.g. 20-degree turns, 9-degree straights'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['awr_track_front_stretch'] = array(
        'field_name' => 'awr_track_front_stretch',
        'label' => $t('Front Stretch (Feet)'),
        'description' => $t('e.g. 1800'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'number',
        ),
    );
    $instances['awr_track_back_stretch'] = array(
        'field_name' => 'awr_track_back_stretch',
        'label' => $t('Back Stretch (Feet)'),
        'description' => $t('e.g. 2244.10'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'number',
        ),
    );
    $instances['awr_track_direction'] = array(
        'field_name' => 'awr_track_direction',
        'label' => $t('Direction'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'options_select',
        ),
    );
    $instances['awr_track_num_turns'] = array(
        'field_name' => 'awr_track_num_turns',
        'label' => $t('Number of Turns'),
        'description' => $t('e.g. 4'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'number',
        ),
    );
    $instances['awr_track_elevation_change'] = array(
        'field_name' => 'awr_track_elevation_change',
        'label' => $t('Elevation Change (Feet)'),
        'description' => $t('e.g. 118.11'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'number',
        ),
    );
    $instances['awr_track_surface'] = array(
        'field_name' => 'awr_track_surface',
        'label' => $t('Track Surface'),
        'description' => $t('e.g. Concrete-asphalt mix'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['awr_track_altitude'] = array(
        'field_name' => 'awr_track_altitude',
        'label' => $t('Altitude (Feet)'),
        'description' => $t('e.g. 1100'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'number',
        ),
    );
    $instances['awr_track_seating'] = array(
        'field_name' => 'awr_track_seating',
        'label' => $t('Seating'),
        'description' => $t('e.g. 25000'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'number',
        ),
    );
    
    //Hidden Legacy Fields
    $instances['awr_track_legacy_location_id'] = array(
        'field_name' => 'awr_track_legacy_location_id',
        'label' => $t('Legacy Location ID'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['awr_track_legacy_track_id'] = array(
        'field_name' => 'awr_track_legacy_track_id',
        'label' => $t('Legacy Track ID'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['awr_track_legacy_series_id'] = array(
        'field_name' => 'awr_track_legacy_series_id',
        'label' => $t('Legacy Series ID'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    $instances['awr_track_legacy_class_id'] = array(
        'field_name' => 'awr_track_legacy_class_id',
        'label' => $t('Legacy Class ID'),
        'required' => FALSE,
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 0,
        ),
    );
    
    foreach ($instances as $instance) {
        $instance['entity_type'] = 'node';
        $instance['bundle'] = 'awr_track';
        field_create_instance($instance);
    }
    
    
    
}

/**
* Implements hook_uninstall().
*/
function awr_track_uninstall() {

    $t = get_t();
    
    //Get all node ids with awr_track content type.
    $sql_query = 'SELECT nid ';
    $sql_query .= 'FROM {node} ';
    $sql_query .= 'WHERE {node}.type = :type ';
    $result = db_query($sql_query, array(':type' => 'awr_track'));
    
    $nids = array();
    foreach ($result as $row) {
        $nids[] = $row->nid;
    }
    
    // Delete all content.
    node_delete_multiple($nids);
    drupal_set_message($t('Autoweek Racing Track content removed.'));
    
    //Remove all fields and field instances.
    foreach (field_info_instances('node', 'awr_track') as $field_name => $instance) {
        field_delete_instance($instance);
    }
    drupal_set_message($t('Autoweek Racing Track fields and field instances removed.'));
    
    //Delete the content type.
    node_type_delete('awr_location');
    drupal_set_message($t('Autoweek Racing Track content type removed.'));
    
    
    //Clean up deleted fields.
    field_purge_batch(1000);
}
